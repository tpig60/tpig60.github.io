{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/context.js"],"names":["Button","Header","data","fluid","file","childImageSharp","fadeIn","Nav","to","Element","icon","letter","text","color","children","useState","showDialog","setShowDialog","close","onClick","css","isOpen","onDismiss","className","aria-hidden","label","src","minAgricultura","alcaldias","corpoica","Pestal","props","faHandshake","faChartLine","faUsers","faMicrochip","faLeaf","faGavel","Home","useStaticQuery","tpi","escudo"],"mappings":"wOAKMA,EAAM,ujB,o8BAICC,EAAS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvB,OACE,6BACE,0BACE,YAAC,IAAD,OAA2BC,MAAOD,EAAKE,KAAKC,gBAAgBF,MAAOG,QAAQ,KAE7E,2BACA,0BACE,wBARM,gSAaN,8B,4KAMKC,EAAM,WACjB,OACE,0BACE,YAAC,IAAD,CAAMC,GAAG,eACP,YAACR,EAAD,sBAIF,YAAC,IAAD,CAAMQ,GAAG,YACP,YAACR,EAAD,4BAIF,YAAC,IAAD,CAAMQ,GAAG,YACP,YAACR,EAAD,kBAIF,YAAC,IAAD,CAAMQ,GAAG,cACP,YAACR,EAAD,gC,6oCCvBFS,EAAU,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,KAA4B,KAAtBC,MAAsB,EAAfC,SACRC,oBAAS,IAAtCC,EADoD,KACxCC,EADwC,KAGrDC,EAAQ,kBAAMD,GAAc,IAClC,OACE,8BACE,yBAAwEE,QAJ/D,kBAAMF,GAAc,KAK3B,wBAAyFN,GACzF,iBACES,IAAG,YAAE,CAAC,CAAD,wMAQJR,GAEH,2BACA,0BACE,YAAC,IAAD,CAAiBF,KAAMA,MAG3B,YAAC,IAAD,OAEEW,OAAQL,EACRM,UAAWJ,GAEX,YAAC,IAAD,KAEE,sBAAQK,UAAU,eAAeJ,QAASD,GACxC,YAAC,IAAD,cACA,oBAAMM,eAAA,GAAN,MAEF,0BACE,0BACE,kCAEF,0BACE,gCACA,YAAC,IAAD,OAAmBC,MAAM,+CACvB,mBAAKC,IAAKC,OAEZ,YAAC,IAAD,OAAmBF,MAAM,2BACvB,mBAAKC,IAAKE,OAEZ,YAAC,IAAD,OAAmBH,MAAM,kIACvB,mBAAKC,IAAKG,a,8IAW1B,SAASC,EAAOC,GAEd,OACE,0BACE,YAACtB,EAAD,CAASE,OAAO,IAAIC,KAAK,UAAUF,KAAMsB,IAAanB,MAAK,gFAC3D,YAACJ,EAAD,CAASE,OAAO,IAAIC,KAAK,YAAYF,KAAMuB,IAAapB,MAAM,gBAC9D,YAACJ,EAAD,CAASE,OAAO,IAAIC,KAAK,QAAQF,KAAMwB,IAASrB,MAAM,gBACtD,YAACJ,EAAD,CAASE,OAAO,IAAIC,KAAK,aAAaF,KAAMyB,IAAatB,MAAM,gBAC/D,YAACJ,EAAD,CAASE,OAAO,IAAIC,KAAK,WAAWF,KAAM0B,IAAQvB,MAAM,gBACxD,YAACJ,EAAD,CAASE,OAAO,IAAIC,KAAK,OAAOF,KAAM2B,IAASxB,MAAM,iB,g4BAK5C,SAASyB,IACtB,IAyBMpC,EAAOqC,YAzBF,cA2BX,OACE,0BACE,YAAC,IAAD,CAAQrC,KAAMA,IACd,YAAC,IAAD,MACA,2BACE,2BACA,YAAC4B,EAAD,MACA,2BACA,YAAC,IAAD,MACA,2BACA,0BACE,YAAC,IAAD,OAAgB3B,MAAOD,EAAKsC,IAAInC,gBAAgBF,QAChD,YAAC,IAAD,OAAgBA,MAAOD,EAAKuC,OAAOpC,gBAAgBF,SAErD,4BAEF","file":"component---src-pages-context-js-f69fc2b4607fe5ee927f.js","sourcesContent":["import React from 'react'\nimport Img from 'gatsby-image'\nimport { Link } from 'gatsby'\nimport tw from 'twin.macro'\n\nconst Button = tw.button`\n  bg-amarillo hover:bg-yellow-400 text-gray-700 font-bold py-2 px-4 border-b-4 border-yellow-700 hover:border-yellow-500 rounded\n`\n\nexport const Header = ({ data }) => {\n  let title = \"¿Cómo ayudar a los agricultores colombianos a que cuenten con la información suficiente de su cultivo (temperatura, humedad, niveles de nitrógeno, fósforo y potasio) de manera rápida, autónoma y económica, para facilitar técnicas de agricultura sostenible y mejorar su competitividad?\"\n  return (\n    <header tw=\"relative w-full h-64 flex justify-center items-center\">\n      <div tw=\"fixed top-0 w-full -z-10\">\n        <Img tw=\"fixed top-0 h-64\" fluid={data.file.childImageSharp.fluid} fadeIn={true} />\n      </div>\n      <div tw=\"absolute w-full h-full bg-black bg-opacity-25\" />\n      <div tw=\"w-4/5 z-20 flex flex-col justify-center items-center\">\n        <p\n          tw=\"font-title font-extrabold text-white text-center text-base md:text-3xl lg:text-2xl xl:text-3xl leading-tight\"\n        >\n          {title}\n        </p>\n        <div tw=\"w-20 h-2 bg-green-300\" />\n      </div>\n    </header>\n  )\n}\n\nexport const Nav = () => {\n  return (\n    <nav tw=\"h-16 bg-pasto flex justify-around items-center\">\n      <Link to=\"/background\">\n        <Button>\n          Antecedentes\n        </Button>\n      </Link>\n      <Link to=\"/context\">\n        <Button>\n          Contexto y Actores\n        </Button>\n      </Link>\n      <Link to=\"/problem\">\n        <Button>\n          Problema\n        </Button>\n      </Link>\n      <Link to=\"/solutions\">\n        <Button>\n          Posibles Soluciones\n        </Button>\n      </Link>\n    </nav>\n  )\n}","\nimport React, { useState } from 'react'\nimport tw, { css } from 'twin.macro'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { Team } from '../components/team'\n\nimport { faGavel, faChartLine, faUsers, faMicrochip, faLeaf, faHandshake } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { DialogOverlay, DialogContent } from \"@reach/dialog\"\nimport VisuallyHidden from \"@reach/visually-hidden\"\nimport \"@reach/dialog/styles.css\"\n\nimport Tooltip, { useTooltip, TooltipPopup } from \"@reach/tooltip\";\nimport \"@reach/tooltip/styles.css\";\n\nimport { Header, Nav } from '../components/layout'\n\n\nimport minAgricultura from '../images/min_agricultura.png'\nimport corpoica from '../images/Corpoica_logo.png'\nimport alcaldias from '../images/alcaldias.jpeg'\n\nconst Element = ({ icon, letter, text, color, children }) => {\n  const [showDialog, setShowDialog] = useState(false)\n  const open = () => setShowDialog(true) \n  const close = () => setShowDialog(false)\n  return (\n    <>\n      <div tw=\"flex flex-col items-center text-white text-6xl cursor-pointer\" onClick={open}>\n        <p tw=\"rounded-full bg-blue-400 h-16 w-16 flex items-center justify-center text-center\">{letter}</p>\n        <p \n          css={[\n            tw`text-black text-2xl mt-2`,\n            `\n            writing-mode: vertical-rl;\n            text-orientation: mixed;\n            `\n          ]}\n        >\n          {text}\n        </p>\n        <div tw=\"flex-grow\"/>\n        <div tw=\"text-black\">\n          <FontAwesomeIcon icon={icon} />\n        </div>\n      </div>\n      <DialogOverlay\n        tw=\"z-30\"\n        isOpen={showDialog}\n        onDismiss={close}\n      >\n        <DialogContent\n        >\n          <button className=\"close-button\" onClick={close}>\n            <VisuallyHidden>Close</VisuallyHidden> \n            <span aria-hidden>×</span> \n          </button>\n          <div tw=\"flex\">\n            <div tw=\"w-1/2 text-center\">\n              <p>Contexto</p>\n            </div>\n            <div tw=\"w-1/2 text-center\">\n              <p>Actores</p>\n              <Tooltip tw=\"z-30\" label=\"EL ministerio de agricultura blah blah blah\">\n                <img src={minAgricultura} />\n              </Tooltip>\n              <Tooltip tw=\"z-30\" label=\"Las alcaldias blah blah\">\n                <img src={alcaldias} />\n              </Tooltip>\n              <Tooltip tw=\"z-30\" label=\"Las alcaldias blah blah asdasdasdasd lorem ipsum lorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsum\">\n                <img src={corpoica} />\n              </Tooltip>\n            </div>\n          </div>\n        </DialogContent>\n\n      </DialogOverlay>\n    </>\n  )\n}\n\nfunction Pestal(props) {\n  //const Element = \n  return (\n    <div tw=\"max-w-screen-lg mx-auto flex justify-around items-stretch\">\n      <Element letter=\"P\" text=\"olitico\" icon={faHandshake} color={tw`bg-pink-400`} />\n      <Element letter=\"E\" text=\"económico\" icon={faChartLine} color=\"bg-pink-400\"/>\n      <Element letter=\"S\" text=\"ocial\" icon={faUsers} color=\"bg-pink-400\"/>\n      <Element letter=\"T\" text=\"ecnológico\" icon={faMicrochip} color=\"bg-pink-400\"/>\n      <Element letter=\"A\" text=\"mbiental\" icon={faLeaf} color=\"bg-pink-400\"/>\n      <Element letter=\"L\" text=\"egal\" icon={faGavel} color=\"bg-pink-400\"/>\n    </div>\n  )\n}\n\nexport default function Home() {\n  const query = graphql`\n    query {\n      file(relativePath: { eq: \"imagen_contexto.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      tpi: file(relativePath: { eq: \"logotpi.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      escudo: file(relativePath: { eq: \"escudo.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `\n  const data = useStaticQuery(query)\n\n  return (\n    <div tw=\"font-sans\">\n      <Header data={data}/>\n      <Nav />\n      <main tw=\"bg-gray-100\">\n        <div tw=\"h-8\" />\n        <Pestal />\n        <div tw=\"h-32\" />\n        <Team />\n        <div tw=\"h-4\" />\n        <div tw=\"w-4/5 md:w-3/5 xl:w-2/5 mx-auto flex flex-wrap justify-center\">\n          <Img tw=\"w-1/2\" fluid={data.tpi.childImageSharp.fluid} />\n          <Img tw=\"w-1/2\" fluid={data.escudo.childImageSharp.fluid} />\n        </div>\n        <div tw=\"h-4\" />\n      </main>\n      <footer tw=\"h-32 bg-teal-200\" />\n    </div>\n  )\n}\n"],"sourceRoot":""}